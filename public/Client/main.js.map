{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/dashboard/dashboard.component.css","webpack:///./src/app/Components/dashboard/dashboard.component.html","webpack:///./src/app/Components/dashboard/dashboard.component.ts","webpack:///./src/app/Components/googlemap/googlemap.component.css","webpack:///./src/app/Components/googlemap/googlemap.component.html","webpack:///./src/app/Components/googlemap/googlemap.component.ts","webpack:///./src/app/Components/home/home.component.css","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/login/login.component.css","webpack:///./src/app/Components/login/login.component.html","webpack:///./src/app/Components/login/login.component.ts","webpack:///./src/app/Components/main-nav/main-nav.component.css","webpack:///./src/app/Components/main-nav/main-nav.component.html","webpack:///./src/app/Components/main-nav/main-nav.component.ts","webpack:///./src/app/Components/membership/membership.component.css","webpack:///./src/app/Components/membership/membership.component.html","webpack:///./src/app/Components/membership/membership.component.ts","webpack:///./src/app/Components/search/search.component.css","webpack:///./src/app/Components/search/search.component.html","webpack:///./src/app/Components/search/search.component.ts","webpack:///./src/app/Components/sign-up/sign-up.component.css","webpack:///./src/app/Components/sign-up/sign-up.component.html","webpack:///./src/app/Components/sign-up/sign-up.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/gym.service.ts","webpack:///./src/app/service/search.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>\\n  dashboard works!\\n</h1>\\n\\n<div *ngIf=\\\"user\\\">\\n  <p>Welcome {{user.firstname}} {{user.lastname}},</p>\\n  <p> Current Membership: {{user.membership}} </p>\\n  <a [routerLink]=\\\"['/search']\\\"><button type=\\\"submit\\\">Search</button></a>\\n  <a [routerLink]=\\\"['/']\\\"><button type=\\\"submit\\\" (click)=\\\"logout()\\\">Log Out</button></a>\\n</div>\\n\\n\\n<div>\\n{{myGymService.myGym}}\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n<div *ngFor=\\\"let gym of gymList\\\">\\n  {{gym.place_id}}\\n  <h1>{{gym.name}}</h1>\\n  <img [src]=\\\"gym.pic\\\"  height=\\\"200px\\\"/>\\n    <p><b>Location</b></p>\\n    <p>{{ gym.formatted_address }}</p> \\n    <p><b>Rating</b></p>\\n    <p>{{ gym.rating }}</p> \\n    <div *ngFor=\\\"let popTimes of gym.busyTimes[0]\\\">\\n      <div *ngIf=\\\"isDate(popTimes.day)\\\">\\n        <h3>{{popTimes.day}}</h3>\\n         <div *ngFor=\\\"let time of popTimes.busyInfo[0]\\\">\\n          <ul>\\n            <li>during hour:{{time.hour}} is % :{{time.percentage}} , busy</li>\\n          </ul>\\n          <br>\\n          </div>\\n        </div>\\n      </div>\\n      <button (click)=\\\"deleteGym(gym.place_id, user._id)\\\">Delete</button>\\n      <button (click)=\\\"replaceGym(gym.place_id, user._id)\\\">Swap This Gym!</button>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\nimport { Observable } from 'rxjs/Observable';\n// import { Observable } from 'rxjs/rx';\nimport { Router } from '@angular/router';\nimport { GymService } from '../../service/gym.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  user: any;\n  error: any;\n  myFlex: any;\n  gymList: any;\n  gymListError: any;\n  show: boolean;\n\n  constructor(\n    private myService: SessionService,\n    private myRouter: Router,\n    private myGymService: GymService\n  ) {\n    this.show = false;\n   }\n\n// ***********************************************************\n  ngOnInit() {\n    this.myService.isLoggedIn()\n    .then(() => {\n      this.myService.currentUser.subscribe((res) => {\n        this.user = res;\n        console.log(`DASHBOARD USER`, this.user);\n        if (this.user === undefined || this.user === null ) {\n          this.myRouter.navigate(['/login']);\n        }\n      });\n      this.getUsersGyms();\n    });\n    }\n// ***********************************************************\nisDate(arrDay) {\n  while (Date().includes(arrDay)) {\n    // console.log('this is the current Date', Date());\n    return this.show = true;\n  }\n}\n// ***********************************************************\ngetUsersGyms() {\n  // console.log(`who is the user?:::::::>`);\n  // console.log(`does this happen---->`, this.myGymService.getAllGyms());\n  this.myGymService.getAllGyms(this.user)\n  .subscribe(usersGyms => {\n    console.log('are these the usersGyms????: ', usersGyms);\n    this.gymList = usersGyms;\n  },\n    () => { this.gymListError = 'Sorry, no gyms listed.'; }\n  );\n}\n// ***********************************************************\ndeleteGym(gymID, userId) {\n  console.log(`User to delete`, userId);\n  console.log('gym id' , gymID);\n  this.myGymService.removeGym(gymID, userId)\n  .subscribe(\n    (gymDeleted) => {\n    console.log(gymDeleted);\n\n    const found = this.gymList.find((gym) => {\n      return gym.place_id === gymID;\n    });\n    const index = this.gymList.indexOf(found);\n    this.gymList.splice(index, 1);\n  },\n  (err) => { this.error = err;\n    console.log('GYM WAS NOT DELETED');\n  });\n}\n// ***********************************************************\n  logout() {\n    this.myService.logout()\n      .subscribe(\n        (res) => console.log('logout', res),\n        (err) => this.error = err\n      );\n  }\n}\n\n","module.exports = \"\\nagm-map{\\n  align-items: center;\\n  height: 100vh;\\n  width: 100%;\\n \\n}\\n\\n.hidden {\\n  display: none;\\n}\"","module.exports = \"\\n<agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\">\\n\\n    <agm-marker  *ngFor= \\\"let m of searchResults\\\" [latitude]=\\\"m?.lat\\\"  [longitude]=\\\"m?.lng\\\" [markerDraggable]=\\\"m?.draggable\\\">\\n\\n    <agm-info-window>\\n      <strong> {{ m?.name }} </strong>\\n      <br>\\n      <strong>{{m?.formatted_address}}</strong>\\n      <br>\\n      <img [src]=\\\"m?.pic\\\" height=\\\"100px\\\"/>\\n\\n    </agm-info-window>\\n\\n  </agm-marker>\\n\\n</agm-map>\\n\\n\\n<button class=\\\"hidden\\\" (click)=\\\"getTheResults()\\\" > Get the results </button>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\nimport { Observable } from 'rxjs/Observable';\nimport { AgmCoreModule } from '@agm/core';\nimport { SearchService } from '../../service/search.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport { containsTree } from '@angular/router/src/url_tree';\nimport { SearchComponent } from '../search/search.component';\n\n@Component({\n  selector: 'app-googlemap',\n  templateUrl: './googlemap.component.html',\n  styleUrls: ['./googlemap.component.css'],\n  // template: `<app-search #app-search</app-search>`\n  providers: [SearchComponent],\n})\nexport class GooglemapComponent implements OnInit {\n  // @ViewChild(SearchComponent) searchComponent: SearchComponent;\n  @Input() searchResults: any;\n  zoom = 11;\n\n  latitude = 25.761681;\n  longitude = -80.191788;\n\n  resultsFromQuery: any = {};\n\n  markerLocation: string;\nmarkerLat: string;\nmarkerLng: string;\nmarkerDraggable: string;\n\n  marker: Array<any> = [];\n\n  noResults: any;\n  error: any;\n\n  constructor(public mySearch: SearchService, public searchComp: SearchComponent, private myService: SessionService) { }\n\n  ngOnInit() {\n    // this.myService.isLoggedIn();\n  }\n\n\n\n\n      mapTest() {\n        console.log(`is anyting happening???` );\n        this.mySearch.searchResult(this.resultsFromQuery)\n          .subscribe(\n\n            (res) => {\n              this.resultsFromQuery = res;\n              console.log('results from query on map comp????????', this.resultsFromQuery);\n            },\n            (err) => this.error = err\n          );\n\n }\n\n\n                        getTheResults() {\n                          this.marker = [];\n                          let newMarker = {\n                            location: '',\n                            lat: '',\n                            lng: '',\n                            draggable: false,\n                          };\n                          //  this.searchResults.forEach(oneThing => {\n                          //  console.log( oneThing.name);\n                          // });\n                        // console.log('this is the search results------>', this.searchResults);\n                          const that = this;\n                          this.searchResults.forEach(oneResult => {\n                        // console.log(oneResult);\n                            newMarker = {\n                              location: oneResult.name,\n                              lat: oneResult.lat,\n                              lng: oneResult.lng,\n                              draggable: false,\n                          };\n                          console.log('this is the new Marker!!!!!!', newMarker);\n                          that.marker.push((Object.assign({}, newMarker)));\n                          });\n                          console.log('this is just the marker', this.marker);\n\n                        }\n\n\n}\n   // tslint:disable-next-line:class-name\n   interface marker {\n     location?: string;\n     lat: number;\n     lng: number;\n     draggable: boolean;\n   }\n\n// tslint:disable-next-line:class-name\n\n\n// mapDisplay() {\n\n//   this.searchComponent.gymSearch();\n//   console.log('map display is working?????/')\n//   this.mySearch.searchResult(this.mySearch.searchResult)\n//   .subscribe(resultsFromSearch => {\n//     console.log('anything happens here?', resultsFromSearch);\n//       this.resultsFromQuery = resultsFromSearch;\n//       const that = this;\n//       resultsFromSearch.forEach(function(markedLocation){\n\n//         const newMarker = {\n//           location: markedLocation.location,\n//           lat: markedLocation.latitude,\n//           lng: markedLocation.longitude,\n//           draggable: false\n//       };\n//       that.markers.push(newMarker);\n//       });\n//     },\n//     () => {\n//       this.noResults = 'Sorry, no lost dogs listed.';\n//     }\n//   );\n\n\n\n    // }\n\n","module.exports = \".cover {\\n  width: 100%;\\n  height: 100vh;\\n}\\n.green {\\n  background-color: aqua;\\n}\\n.bg-1 {\\n  background: linear-gradient(35deg, #97fca6 15%, #8db6fe 100%);\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n  -webkit-filter: saturate(2); \\n  filter: contrast(2);\\n}\\n\"","module.exports = \"<app-main-nav>\\n  <div class=\\\"cover bg-1\\\">\\n    \\n  </div>\\n  <div class=\\\"cover\\\">\\n\\n  </div>\\n</app-main-nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private myService: SessionService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"mat-icon {\\n  color: #888888;\\n  \\n}\\n\\ninput {\\n  color: #888888;\\n}\\n\\nbutton {\\n  background-color: #21BCE4;\\n  width: 200px;\\n  color: white;\\n  font-weight: 400;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n}\\n\\na {\\n  color: #21BCE4;\\n  font-weight: 400;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n  text-decoration: none;\\n}\\n\\nh2 {\\n  color: #888888;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n  font-weight: 400;\\n  border-bottom: #888888 1px solid;\\n  padding-bottom: 25px;\\n  \\n}\\n\\n.login {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 220px;\\n  height: 500px;\\n}\\n\\n.cover {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100vh;\\n}\"","module.exports = \"<app-main-nav>\\n\\n  <div class=\\\"cover\\\">\\n    <div class=\\\"login\\\">\\n      \\n      <h2>Welcome Back!</h2>\\n      \\n      <br>\\n      <hr>\\n      \\n      <form>\\n        \\n        <mat-form-field>\\n          <mat-icon matSuffix>account_circle</mat-icon>\\n          <input matInput mat-icon placeholder=\\\"USERNAME\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n        </mat-form-field>\\n        \\n        <br>\\n        \\n        <mat-form-field>\\n          <mat-icon matSuffix>https</mat-icon>\\n          <input matInput mat-icon placeholder=\\\"PASSWORD\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n        </mat-form-field>\\n        \\n        <br>\\n        <br>\\n        <p class=\\\"error\\\"> {{ error }} </p>\\n        <button mat-button (click)=\\\"login()\\\">Login</button>\\n        \\n      </form>\\n      \\n      <br>\\n      \\n      <a [routerLink]=\\\"['/signup']\\\">Don't have an account?</a>\\n      \\n    </div>\\n  </div>\\n\\n</app-main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\nimport { Observable } from 'rxjs/Observable';\n// import { Observable } from 'rxjs/rx';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n  user: any;\n  error: string;\n\n  constructor(private myService: SessionService, private myRouter: Router) { }\n\n  ngOnInit() {\n    // this.myService.isLoggedIn();\n\n    // this.myService.currentUser.subscribe((res) => {\n    //   this.user = res;\n    //   console.log(`DASHBOARD USER`, this.user);\n    //   if (this.user === undefined || this.user === null ) {\n    //     this.myRouter.navigate(['/login']);\n    //   }\n    // });\n\n  }\n\n  login() {\n    const loginInfo = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.myService.login(loginInfo)\n      .subscribe(\n        () => {\n          this.user = this.myService.currentUser;\n            this.myRouter.navigate(['/dashboard']);\n        },\n        (err) => this.error = err\n      );\n  }\n\n}\n","module.exports = \"\\n.sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  /* box-shadow: 3px 0 6px rgba(0,0,0,.24); */\\n}\\n\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n\\nmat-toolbar a {\\n  display: inline-block;\\n  color: #888888;\\n  text-decoration: none;\\n  margin: 0 10px;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n  font-weight: 400;\\n  font-size: .8em;\\n}\\n\\nmat-icon {\\n  color: #888888;\\n}\\n\\nmat-toolbar {\\n  color: #888888;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n  font-weight: 400;\\n  position: fixed;\\n  z-index: 1;\\n}\\n\\n.white-nav-hover {\\n  background-color: rgba(255, 255 255, .5);\\n  border-bottom: solid 1px lightgray;\\n  box-shadow: 1px 1px 3px rgba(0,0,0,.24);\\n}\\n\\n.white-icon {\\n color: #888888;\\n}\\n\\n@media (min-width: 650px){\\n  .sidenav {\\n    display: none;\\n  }\\n  \\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\"\\n    >\\n    <mat-toolbar class=\\\"white-nav-hover\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\\"['/search']\\\"><button mat-icon-button><mat-icon>search</mat-icon>Search</button></a>\\n      <a mat-list-item [routerLink]=\\\"['/signup']\\\"><button mat-icon-button><mat-icon>create</mat-icon> Signup</button></a>\\n      <a mat-list-item [routerLink]=\\\"['/login']\\\"><button mat-icon-button><mat-icon>account_circle</mat-icon> Login</button></a>\\n      <a mat-list-item [routerLink]= \\\"['/dashboard']\\\"><button type=\\\"submit\\\">Dashboard</button></a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar class=\\\"white-nav-hover\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button \\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\" class=\\\"white-icon\\\">apps</mat-icon>\\n      </button>\\n      <a [routerLink]=\\\"['/']\\\"><img src=\\\"../../../assets/images/Flex-logo-solo_1@216x-8.png\\\" alt=\\\"Flex-Pass\\\" width=\\\"150px\\\"></a>\\n      <span class=\\\"spacer\\\"></span>\\n      <a [routerLink]=\\\"['/search']\\\">Search</a>\\n      <a [routerLink]=\\\"['/signup']\\\">Signup</a>\\n      <a [routerLink]=\\\"['/login']\\\">Login</a> \\n      <a [routerLink]= \\\"['/dashboard']\\\">Dashboard</a>\\n    </mat-toolbar>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  }\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let gym of gymList\\\">\\n    {{gym.place_id}}\\n    <h1>{{gym.name}}</h1>\\n    <img [src]=\\\"gym.pic\\\"  height=\\\"200px\\\"/>\\n      <p><b>Location</b></p>\\n      <p>{{ gym.formatted_address }}</p> \\n      <p><b>Rating</b></p>\\n      <p>{{ gym.rating }}</p> \\n      <div *ngFor=\\\"let popTimes of gym.busyTimes[0]\\\">\\n        <div *ngIf=\\\"isDate(popTimes.day)\\\">\\n          <h3>{{popTimes.day}}</h3>\\n           <div *ngFor=\\\"let time of popTimes.busyInfo[0]\\\">\\n            <ul>\\n              <li>during hour:{{time.hour}} is % :{{time.percentage}} , busy</li>\\n            </ul>\\n            <br>\\n            </div>\\n          </div>\\n        </div>\\n        <button (click)=\\\"deleteGym(gym.place_id, user._id)\\\">Delete</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.css']\n})\nexport class MembershipComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".spacer {\\n  margin-top: 70px;\\n  height: 70px;\\n  width: 100%;\\n}\\n\\n.map {\\n  width: 50vw;\\n  position: absolute;\\n  margin-left: 50vw;\\n}\\n\\n.search {\\n  margin-top: 70px;\\n    display: flex;\\n    justify-items: end;\\n    align-items: center;\\n    height: 70px;\\n    width: 100%;\\n    border-bottom: 1px solid #888888;\\n    padding-left: 10px;\\n    position: fixed;\\n    z-index: 1;\\n    background-color: white;\\n}\\n\\ninput {\\n  width:300px;\\n}\\n\\n.search-btn {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 1px solid #888888;\\n  margin-left: 20px;\\n  width: 200px;\\n  \\n}\\n\\n.dvsn {\\n  display: flex;\\n  justify-content: space-between;\\n  height: 80vh;\\n  position: fixed;\\n}\\n\\n.info-contain {\\n  width: 50vw;\\n  overflow-y: scroll;\\n  overflow-x: hidden; \\n  height: 80vh;\\n\\n}\\n\\n.single-gym {\\n  padding: 10px;\\n  width: 50vw;\\n  line-height: 1px;\\n  border-bottom: 1px solid #888888;\\n}\\n\\n.gym-contain {\\n  display: flex;\\n  flex-direction: column;\\n  height: 400px;\\n}\"","module.exports = \"<app-main-nav>\\n  \\n  <div>\\n    <form class=\\\"search\\\">\\n      <mat-form-field>\\n        <mat-icon matSuffix>location_on</mat-icon>\\n        <input matInput mat-icon placeholder=\\\"Find Your Gym\\\" type=\\\"search\\\" [(ngModel)]=\\\"resultSearch.searchTerm\\\" name=\\\"search\\\">\\n      </mat-form-field>\\n      <button class=\\\"search-btn\\\" mat-button type=\\\"button\\\" (click)=\\\"gymSearch()\\\"><mat-icon matSuffix>search</mat-icon></button>\\n    </form>\\n  </div>\\n  <div class=\\\"spacer\\\"></div>\\n  \\n  <div class=\\\"dvsn\\\">\\n    \\n    <div class=\\\"info-contain\\\">\\n      <!-- START OF GYM INFO -->\\n      <div class=\\\"gym-contain\\\">\\n        <div class=\\\"single-gym\\\" *ngFor=\\\"let gym of mySearch.gymResults\\\">\\n          <img [src]=\\\"gym.pic\\\"  height=\\\"150px\\\" width=\\\"250px\\\"/>\\n          <h4><b>{{ gym.name }}</b></h4> \\n          <p>{{ gym.formatted_address }}</p> \\n          <p><b>Rating</b></p>\\n          <p>{{ gym.rating }}</p> \\n          \\n          <div *ngFor=\\\"let popTimes of gym.busyTimes[0]\\\">\\n            <div *ngIf=\\\"isDate(popTimes.day)\\\">\\n              <!-- <h3>{{popTimes.day}}</h3>  THIS IS THE CURRENT DAY --> \\n              <h4>Current Times</h4>\\n              <div *ngFor=\\\"let time of popTimes.busyInfo[0]\\\">\\n                <ul>\\n                  <!-- <li>during hour:{{time.hour}} is % :{{time.percentage}} , busy</li> -->\\n                </ul>  \\n              </div>  \\n            </div>\\n          </div>\\n          <!-- Add Gym Button -->\\n          <!-- <button mat-icon type=\\\"submit\\\" (click)=\\\"addGym(gym.place_id, user)\\\"><mat-icon>add_circle_outline</mat-icon> </button> -->\\n        </div>\\n      </div>\\n      <!-- END OF GYM INFO -->\\n    </div>\\n    \\n    \\n    <!-- THIS IS THE MAP -->\\n    <div class=\\\"map\\\"> \\n      <app-googlemap [searchResults] = \\\"mySearch.gymResults\\\"></app-googlemap>\\n    </div>\\n    <!-- END OF THE MAP -->\\n  </div>\\n  \\n  \\n  \\n  \\n  <!-- <div *ngFor=\\\"let week of gym.week[0]\\\">\\n    \\n    <div *ngIf=\\\"isDate(week.day)\\\">why</div>\\n    \\n    <div> {{week.day}}</div> -->\\n    <!-- <div *ngIf=\\\"Date().includes('week.day')\\\"></div> -->\\n    <!-- <ul *ngFor=\\\"let busy of week.hours\\\">\\n      \\n      \\n      <li>\\n        hour of day:{{busy.hour}} ---  percentage busy: {{busy.percentage}}\\n      </li>\\n      \\n      \\n    </ul> -->\\n    \\n  </app-main-nav> \\n    \\n    \\n    \\n      \"","import { Component, OnInit, SystemJsNgModuleLoaderConfig } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\nimport { Observable } from 'rxjs/Observable';\n// import { Observable } from 'rxjs/rx';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { SearchService } from '../service/search.service';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport { containsTree } from '@angular/router/src/url_tree';\nimport { SearchService } from '../../service/search.service';\nimport { GymService } from '../../service/gym.service';\n\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  resultSearch: any = {};\n  searchTerm: any;\n  today: Date = new Date();\n\n  error: string;\n  gymReturn: any = this.mySearch.gymResults;\n  // week: any = this.mySearch.gymResults[0].week[0].forEach(thing => thing.day);\n  // week = this.mySearch.gymResults[0].week[0];\n  thisIsWeek: any;\n  show: boolean;\n  theDay: any;\n  gymSelected: any;\n  user: any;\n\n  constructor(public mySearch: SearchService,\n    private myGymService: GymService,\n    private myAuthService: SessionService,\n    private myRouter: Router\n  ) {\n    this.show = false;\n  }\n\n\n  isDate(arrDay) {\n\n\n    while (Date().includes(arrDay)) {\n\n      // console.log('this is the current Date', Date());\n      return this.show = true;\n\n    }\n\n\n  }\n\n\n\n\n  addGym(gymID, user) {\n    console.log(gymID);\n    this.myGymService.newGym(gymID, user)\n    .subscribe(\n      (gymAdded) => {\n      console.log(gymAdded);\n    },\n    (err) => { this.error = err;\n      console.log('Unsucessfully Added Gym');\n    });\n  }\n\n  gymSearch() {\n    console.log(`this is Search Term====>>>>>>`, this.resultSearch.searchTerm);\n    this.mySearch.searchResult(this.resultSearch)\n      .subscribe(\n\n        (res) => {\n          this.resultSearch.searchTerm = res;\n        },\n        (err) => this.error = err\n      );\n\n    }\n\n      // getArray() {\n      //   // tslint:disable-next-line:max-line-length\n      // tslint:disable-next-line:max-line-length\n      //   // console.log(`this gets array`, this.mySearch.gymResults[0].week[0].forEach(thing => { console.log('this is the thing--->', thing.day); }));\n\n      //   const week = this.mySearch.gymResults[0].week[0];\n      //   week.forEach(element => {\n      //     if (Date().includes(element.day)) {\n      //       console.log('its todays day');\n      //       console.log('todays day stuff', element.hours);\n\n      //       return this.thisIsWeek = element.hours;\n      //     }\n      //   });\n\n      // }\n\n\n  ngOnInit() {\n    this.gymSearch();\n    // console.log(\"what is gym return:  \", this.gymReturn);\n    this.myAuthService.currentUser.subscribe((res) => {\n      this.user = res;\n      if (this.user === undefined || this.user === null ) {\n        this.myRouter.navigate(['/login']);\n      }\n    });\n\n    // this.myAuthService.isLoggedIn();\n\n  }\n\n}\n","module.exports = \".signup {\\n  height: 500px;\\n  width: 200px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.cover {\\n  width: 100%;\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-top: 150px;\\n}\\n\\nbutton {\\n  background-color: #21BCE4;\\n  width: 200px;\\n  color: white;\\n  font-weight: 400;\\n  font-family: avenir, 'avenir next', helvetica, arial, sans-serif; \\n}\\n\\ninput {\\n  width: 200px;\\n}\\n\\n.signDiv {\\n  display: flex;\\n  justify-content: space-between\\n}\\n\"","module.exports = \"<app-main-nav>\\n  <div class=\\\"cover\\\">\\n    <div class=\\\"signup\\\">\\n      <h1> Sign Up </h1>\\n      <br>\\n      <form>\\n       <div class=\\\"signDiv\\\">\\n         <div class=\\\"left\\\">\\n              <mat-form-field>\\n                <!-- <mat-icon matSuffix>rename-box</mat-icon> -->\\n                <input matInput mat-icon placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.firstname\\\" name=\\\"first\\\">\\n              </mat-form-field>\\n            <br>\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Last Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.lastname\\\" name=\\\"lastname\\\">\\n              </mat-form-field>\\n            <br>\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Date of Birth\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.dob\\\" name=\\\"dob\\\">\\n              </mat-form-field>\\n            <br>\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Address\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.address\\\" name=\\\"address\\\">\\n              </mat-form-field>\\n            <br>\\n         </div>\\n           <div class=\\\"right\\\">\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Email\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.email\\\" name=\\\"email\\\">\\n              </mat-form-field>\\n            <br>\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Phone\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.phone\\\" name=\\\"phone\\\">\\n              </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <mat-select name=\\\"membership\\\" [(ngModel)]=\\\"formInfo.membership\\\" placeholder=\\\"Membership\\\">\\n                  <mat-option>None</mat-option>\\n                  <mat-option value=\\\"flex1\\\">Flex 1</mat-option>\\n                  <mat-option value=\\\"flex2\\\">Flex 2</mat-option>\\n                  <mat-option value=\\\"flex3\\\">Flex 3</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            <br>\\n              <mat-form-field>\\n                <input matInput mat-icon placeholder=\\\"Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"formInfo.username\\\" name=\\\"username\\\">\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field>\\n                  <input matInput mat-icon placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"formInfo.password\\\" name=\\\"password\\\">\\n                </mat-form-field>\\n           </div>\\n       </div>\\n        <br>\\n        <br>\\n        <br>\\n      <button mat-button (click)=\\\"signup()\\\"> Signup </button>\\n      </form>\\n      <p class=\\\"error\\\"> {{ error }} </p>\\n    \\n    </div> \\n  </div>\\n</app-main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../service/auth.service';\n// import { Observable } from 'rxjsjj/Observable';\nimport { Observable } from 'rxjs/rx';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  formInfo = {\n    firstname: '',\n    lastname: '',\n    dob: '',\n    address: '',\n    email: '',\n    phone: '',\n    membership: '',\n    username: '',\n    password: '',\n  };\n\n  user: any;\n  error: string;\n\n  constructor( private myService: SessionService, private router: Router ) { }\n\n  signup() {\n    console.log(`Signup Now`);\n    this.myService.signup(this.formInfo)\n      .subscribe(\n        (user) => {this.user = user;\n          console.log(this.user);\n          this.router.navigate(['/login']);\n        },\n        (err) => { this.error = err;\n          console.log(`heyyyyy`);\n        });\n\n  }\n\n  ngOnInit() {\n    this.myService.isLoggedIn();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from './service/auth.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  user: any;\n  constructor(private myService: SessionService, private router: Router) {}\n\n  ngOnInit() {\n\n\n    this.myService.currentUser.subscribe((res) => {\n      this.user = res;\n      if (this.user === undefined || this.user === null ) {\n        this.router.navigate(['/login']);\n      }\n    });\n  //   this.myService.isLoggedIn()\n  //   .then( () => {\n  //     this.user = this.myService.currentUser;\n  //     if (this.user === null) {\n  //       this.router.navigate(['/login']);\n  //     }\n  //     // console.log('user in landing: ', this.user);\n  //   } )\n  //   .catch( err =>  {\n  //     console.log('err in landing ======= : ', err);\n  //     this.router.navigate(['/login']);\n  //   });\n  }\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes} from '@angular/router';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { AppComponent } from './app.component';\nimport { SessionService } from './service/auth.service';\nimport { SignUpComponent } from './Components/sign-up/sign-up.component';\nimport { SearchComponent } from './Components/search/search.component';\nimport { SearchService } from './service/search.service';\nimport { GooglemapComponent } from '../app/Components/googlemap/googlemap.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { DashboardComponent } from './Components/dashboard/dashboard.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { MainNavComponent } from './Components/main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MembershipComponent } from './Components/membership/membership.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'index', pathMatch: 'full'},\n  { path: 'signup', component: SignUpComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'mapTest', component: GooglemapComponent},\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'index', component: HomeComponent },\n  { path: 'main', component: MainNavComponent },\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignUpComponent,\n    SearchComponent,\n    GooglemapComponent,\n    LoginComponent,\n    DashboardComponent,\n    HomeComponent,\n    MainNavComponent,\n    MembershipComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(routes),\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBHsQ5mbZ20-fri8maikgz2H_6Wmt64LZ0',\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n  providers: [\n    SessionService,\n    SearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  temporaryUser: any;\n  currentUser: BehaviorSubject<string>;\n\n  constructor(private http: Http) { }\n\n  handleError(e) {\n    return Observable.throw(e.json().message);\n  }\n\n  signup(user) {\n    return this.http.post(`http://localhost:3000/api/signup`, user, { withCredentials: true})\n      .map(res => {\n        console.log('res is: ', res);\n        res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  login(user) {\n    return this.http.post(`http://localhost:3000/api/login`, user, { withCredentials: true})\n      .map(res => {\n\n        this.temporaryUser = res;\n\n        // console.log(`something in front --->`, res);\n\n\n        console.log(`Asian LOVEEEEEEE`, JSON.parse(this.temporaryUser._body));\n        this.currentUser = new BehaviorSubject(JSON.parse(this.temporaryUser._body));\n        // res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  logout() {\n    return this.http.post(`http://localhost:3000/api/logout`, {})\n      .map(res => {\n        this.currentUser = new BehaviorSubject(null);\n        res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  isLoggedIn() {\n    return this.http.get(`http://localhost:3000/api/loggedin`, { withCredentials: true })\n    .toPromise()\n      .then(res => {\n        this.temporaryUser = res;\n\n        this.currentUser = new BehaviorSubject(JSON.parse(this.temporaryUser._body));\n        // res.json();\n        })\n      .catch( err => {\n        this.currentUser = new BehaviorSubject(null);\n        console.log('Error on isLoggedIn function:', err);\n      });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs/Observable';\nimport { SessionService } from '../service/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GymService {\n\n  constructor(private http: Http,\n    private myService: SessionService) { }\n  myGym: any;\n  tempGym: any;\n\n  handleError(e) {\n    return Observable.throw(e.json().message);\n  }\n\n  newGym(gymID, user) {\n    console.log(`WHAT THE HELL MAN`, user._id);\n    const gymId = { gymId: gymID, userId: user._id };\n    console.log(`THIS PART WORKS`, gymID);\n    return this.http.post(`http://localhost:3000/select-gyms`, gymId)\n    .map(res => {\n        console.log('res is WHATTTT IS ITT!!!!!!: ', this.myGym);\n        res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  removeGym(gymID, userId) {\n    console.log(`THIS PART WORKS`, userId);\n    console.log(`THIS PART WORKS & this too`, gymID);\n    // console.log(`DID THIS EVEN HAPPEN`, user._id);\n    const data = { gymId: gymID, userId: userId};\n    return this.http.post(`http://localhost:3000/delete-gym`, data)\n    .map(res => {\n        console.log('REMOVE GYM: ', res);\n        res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // getGym() {\n  //   console.log(`this is the user in the get gym click!!`);\n  //   return this.http.get(`http://localhost:3000/flex`)\n  //   .map(res => {\n  //     // console.log(`this is the result from res---->`, res);\n  //     this.tempGym = res;\n  //     // console.log(`this is the tempGYm`, this.tempGym);\n  //     // this.myGym = JSON.parse(this.tempGym._body);\n  //     // console.log(`Getting Users GYM List`, this.myGym);\n  //     // this.tempGym = JSON.parse(this.tempGym);\n  //     this.tempGym.json();\n  //   })\n  //   .catch(this.handleError);\n  // }\n\n  getAllGyms(user) {\n    console.log(`does this show the user!!!?!?!?!?!?!?!?`, user);\n    return this.http.post(`http://localhost:3000/flex`, user)\n        .map(res =>\n          res.json()\n        );\n                    // console.log(`this is the res??????`, res.json());\n          // return res.json();\n\n\n  }\n\n  getSingleGym(oneGym) {\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { Observable } from 'rxjs/Observable';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  results: any;\n  gymResults: Array<any> = [];\n  constructor(private http: Http) { }\n\n  searchResult(x) {\n    console.log('x is : ', x);\n    return this.http.post(`http://localhost:3000/search/gymsearch`, x)\n    .map(res => {\n      this.results = res;\n\n      console.log(`get the results bruhuuhuhuhuhu`, this.results._body);\n      // console.log(`get the results MAMAMAMAMAMAMAMA`, this.results);\n      this.gymResults = JSON.parse(this.results._body);\n      // console.log('res in search service:----->', JSON.parse(this.results._body));\n      // this.gymResults.push(JSON.parse(this.results._body));\n      console.log(`This is GymResults========>>>>>>!!!!!!!`, this.gymResults);\n      res.json();\n\n    })\n      .catch(this.handleError);\n  }\n\n\n\n\n  handleError(e) {\n    return Observable.throw(e.json().message);\n  }\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}